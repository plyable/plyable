{"version":3,"sources":["images/Logo.png","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/adminMainReducer.js","redux/reducers/surveyReducer.js","redux/reducers/addEmployeeReducer.js","redux/reducers/participationReducer.js","redux/reducers/messagesReducer.js","redux/reducers/adminOrgReducer.js","redux/reducers/behaviorsReducer.js","redux/reducers/addNewOrgReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/adminMainSaga.js","redux/sagas/addEmployeeSaga.js","redux/sagas/adminOrgSaga.js","redux/sagas/userMainSaga.js","redux/sagas/addNewOrgSaga.js","redux/sagas/surveySaga.js","redux/sagas/participationSaga.js","redux/sagas/behaviorSaga.js","redux/sagas/index.js","constants/securityLevel.js","components/Nav/NavDrawer.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/Registration/Registration.js","components/ProtectedRoute/ProtectedRoute.js","components/Manager/FullList.js","components/Manager/AddEmployees.js","components/CompletedFeedback/CompletedFeedback.js","components/AdminOrgMain/AdminOrgMain.js","components/Survey/NextButton.js","components/Survey/PrevButton.js","components/Survey/SubmitButton.js","components/Survey/BehaviorCard.js","components/Survey/Survey.js","components/UserMain/UserMain.js","components/AdminMain/AdminMain.js","components/AdminMain/NewOrgForm.js","components/Messages/AlertSnackBar.js","components/Messages/SendingEmails.js","components/Messages/EmailError.js","components/Messages/RedundantEmail.js","components/Messages/RegisterError.js","components/Messages/AllMessages.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","loginMode","state","arguments","length","undefined","type","userReducer","action","payload","Object","objectSpread","adminMainReducer","combineReducers","surveyScore","toConsumableArray","concat","filter","survey","id","initialState","emailList","addEmployeeReducer","participationReducer","messagesReducer","addNewOrganizationSnackBar","surveyCompletedSnackBar","confirmDeactivateSnackBar","registrationCompletedSnackBar","loginError","loginMistype","loginInputError","deactivedOrganization","addedEmployees","addedManagers","surveySubmitted","sendingEmail","emailSuccess","emailError","emailRedundant","registerError","avgData","specificData","behaviorData","downloadBehaviorData","downloadAverageData","behaviors","addNewOrgReducer","rootReducer","user","adminChartData","behaviorReducer","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registerInvited","registrationSaga","registrationSaga_marked","window","location","registrationSaga_marked2","registrationSaga_marked3","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","fetchOrganizations","deactivateOrganization","updateOrganization","adminMainSaga","adminMainSaga_marked","call","adminMainSaga_marked2","adminMainSaga_marked3","_context4","_marked4","addEmployeeEmail","reinviteEmployee","editEmployee","addEmployeeSaga","addEmployeeSaga_marked","method","url","params","email","addEmployeeSaga_marked2","newEmail","oldEmail","org_id","addEmployeeSaga_marked3","addEmployeeSaga_marked4","avgChart","specificChart","downloadData","adminOrgSaga","MIN_PERCENT","orgId","avgList","positiveData","negativeData","destroy","avg","percent","map","x","week","y","positive","negative","Chart","document","getElementById","datasets","label","backgroundColor","borderColor","borderWidth","lineTension","options","responsive","legend","position","title","display","text","fontSize","scales","xAxes","ticks","stepSize","callback","dataLabel","index","yAxes","scaleLabel","labelString","beginAtZero","max","adminOrgSaga_marked","behaviorId","specificList","chartData","expectData","expect_avg","labels","adminOrgSaga_marked2","behaviorList","adminOrgSaga_marked3","behaviorResponse","averageResponse","downloadBehavior","downloadAverage","adminOrgSaga_marked4","_context5","_marked5","userOrgChart","userMainSaga","aspectRatio","userMainSaga_marked","userMainSaga_marked2","addNewOrganization","addNewOrgSaga","addNewOrgSaga_marked","addNewOrgSaga_marked2","addNewSurveyResults","surveySaga","surveyWeek","survey_week","hash","surveySaga_marked","surveySaga_marked2","fetchParticipation","participationSaga","participationSaga_marked","participationSaga_marked2","fetchBehaviors","behaviorSaga","behaviorSaga_marked","behaviorSaga_marked2","rootSaga","all","sagas_marked","securityLevel","ADMIN_ROLE","MANAGER_ROLE","EMPLOYEE_ROLE","NavDrawer","right","toggleDrawer","side","open","_this","setState","defineProperty","handleAdminMainClick","props","history","push","handleMainClick","handleSurveyStatusClick","handleAddEmployeesClick","handleInfoClick","_this2","classes","sideList","react_default","createElement","security_level","className","list","List_default","ListItem_default","button","onClick","ListItemIcon_default","ListAlt_default","ListItemText_default","primary","Divider_default","dispatch","VerifiedUser_default","Button_default","menuButton","Menu_default","Drawer_default","anchor","onClose","tabIndex","role","onKeyDown","React","Component","navDrawerStyles","withStyles","width","fullList","color","navDrawerRouterStyles","withRouter","connect","Nav","AppBar_default","appBar","Toolbar_default","Typography_default","variant","grow","Link","to","src","Logo","height","alt","Nav_NavDrawer","navStyles","textAlign","flexGrow","marginLeft","marginRight","_ref","Footer","theme","createMuiTheme","typography","useNextVariants","palette","main","sub","secondary","LoginPage","password","login","event","preventDefault","handleInputChangeFor","propertyName","target","value","styles","outFrame","cardFrame","subBackground","inputDiv","textField","placeholder","name","onChange","buttonDiv","logInPageStyles","margin","border","borderRadius","maxWidth","padding","alignItems","boxSizing","outline","&:focus","stringToParams","string","paramArray","objectToSend","replace","split","forEach","param","decodeURIComponent","Registration","search","confirmPassword","dialogOpen","handleSubmit","handleCancel","onSubmit","disabled","required","index_es","component","ComponentToShow","ComponentToProtect","otherProps","objectWithoutProperties","Route","assign","FullList","editBox","handleClick","handleChange","handleEdit","employee","employees","table","key","emailTd","buttonTd","buttons","MailOutline_default","EditOutlined_default","Dialog_default","DialogTitle_default","emailInput","DialogActions_default","maxHeight","overflow","borderCollapse","paddingLeft","AddEmployees","sendInvitationEmails","_callee","splitList","componentDidMount","subTitle","Manager_FullList","DialogContent_default","_ref2","resize","marginTop","CompletedFeedback","rowsPerPage","page","handleChangeRowsPerPage","handleChangePage","arr","useOrgId","reduxState","_this$state","uncompleted","Number","count","feedbackList","innerPaper","slice","rowsPerPageOptions","labelRowsPerPage","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","AdminOrgMain","convertArrayOfObjectsToCSV","args","result","ctr","keys","columnDelimiter","lineDelimiter","shift","join","item","downloadCSV","keyword","link","csv","valueList","dataList","Time_in_Weeks","Avg_Score","Expectation_Score","#_of_Responses","user_count","Total_Users","total_count","%_of_Responses","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","str","indexOf","err","return","_i","Positive_Avg_Score","Negative_Avg_Score","match","encodeURI","setAttribute","getFileName","click","filename","Date","now","handleChangeBehavior","goBack","root","components_CompletedFeedback_CompletedFeedback","downloadButtonDiv","selectBox","behavior","textAlignLast","marginBottom","background","boxShadow","NextButton","switchCard","number","size","KeyboardArrowRight_default","PrevButton","KeyboardArrowLeft_default","SubmitButton","lastCard","score","expectScore","expectationScore","expectationSurvey","BehaviorCard","property","card","Card_default","CardContent_default","gutterBottom","definition","formDiv","FormControl_default","formControl","RadioGroup_default","row","FormControlLabel_default","radioLabel","control","Radio_default","labelPlacement","CardActions_default","Survey_PrevButton","current","cardNumber","Survey_NextButton","Survey_SubmitButton","behaviorCardStyles","Survey","openCard","cards","Stepper_default","activeStep","connector","StepConnector_default","active","connectorActive","completed","connectorCompleted","connectorDisabled","line","connectorLine","Step_default","StepLabel_default","org_name","Survey_BehaviorCard","stepper","& $connectorLine","grey","transition","transitions","create","UserMain","renderMessage","info","chartFrame","chartTitle","CustomTableCell","head","common","black","white","body","textTransform","TableCell","AdminMain","deactivateDialog","addManager","editDialog","organization","orgName","handleAddNewOrganizationClick","handleViewOrgClick","handleDeactivateClick","handleDeactivateConfirm","handleCancelDeactivate","handleEditOrgClick","handleChangeOrgName","handleEditCancelClick","handleUpdateOrgClick","handleAddManagers","handleCancelAddManager","addManagerData","emptyRows","Math","min","collecting_data","deactivate","style","colSpan","multiline","rows","adminMainRouter","adminMainRouterStyles","spacing","unit","overflowX","minWidth","&:nth-of-type(odd)","default","NewOrgForm","newOrganization","handleChangeFor","handleOrgSubmit","container","noValidate","autoComplete","TextField_default","newOrgFormStyles","minHeight","selectEmpty","flexWrap","AlertSnackBar","handleClose","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","message","ContentProps","aria-describedby","AllMessages","Messages_AlertSnackBar","Messages_SendingEmails","Messages_EmailError","Messages_RedundantEmail","RegisterError","indigo","teal","errors","red","App","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","render","Messages_AllMessages","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App"],"mappings":"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","file":"static/js/main.0b2704c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.261b1894.png\";","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'ADD_SURVEY_STATUS':\n      return { ...state, ...action.payload };\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const adminMainReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ORGANIZATIONS':\n            return action.payload; //organizations are set in an array in reduxState\n        default:\n            return state;\n    }\n};\n\nexport default adminMainReducer;\n","import { combineReducers } from 'redux';\n\nconst surveyScore = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SCORE':\n      return [ ...state, action.payload ];\n    case 'REMOVE_BEHAVIOR':\n      return state.filter(survey => {\n        if(survey.id === action.payload.id) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  surveyScore,\n});//stores survey scores from server\n","const initialState = { \n  emailList: [],\n}\n\nconst addEmployeeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_EMPLOYEES':\n      return {...state, emailList: action.payload};\n    \n    default:\n      return state;  \n  } \n}\n\nexport default addEmployeeReducer;","const participationReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_PARTICIPATION':\n            return action.payload;\n        default:\n            return state;\n    }\n};//holds a list of all users of a specific organization and whether or not they've completed their survey\n\nexport default participationReducer;\n","const messagesReducer = (state = {\n    addNewOrganizationSnackBar: false,\n    surveyCompletedSnackBar: false,\n    confirmDeactivateSnackBar: false,\n    registrationCompletedSnackBar: false,\n    loginError: false,\n    loginMistype: false,\n    loginInputError: false,\n    deactivedOrganization: false,\n    addedEmployees: false,\n    addedManagers: false,\n    surveySubmitted: false,\n    sendingEmail: false,\n    emailSuccess: false,\n    emailError: false,\n    emailRedundant: false,\n    registerError: false,\n}, action) => {\n    //each component of state corresponds to a dialog that lives on app.js\n    //on actions that trigger this reducer open or close one of these dialogs\n    switch (action.type) {\n        case 'ADD_NEW_ORGANIZATION_SNACKBAR':\n            return {\n                ...state,\n                addNewOrganizationSnackBar: true,\n            }\n        case 'SURVEY_COMPLETED_SNACKBAR':\n            return {\n                ...state,\n                surveyCompletedSnackBar: true,\n            }\n        case 'CONFIRM_DEACTIVATE_SNACKBAR':\n            return {\n                ...state,\n                confirmDeactivateSnackBar: true,\n            }\n        case 'REGISTRATION_COMPLETED_SNACKBAR':\n            return {\n                ...state,\n                registrationCompletedSnackBar: true,\n            }\n        case 'FINISH_EMAILS':\n            return {\n                ...state,\n                sendingEmail: false,\n                emailSuccess: true,\n            }\n        case 'LOGIN_MISTYPE':\n            return {\n                ...state,\n                loginMistype: true,\n            }\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                loginError: true,\n            }\n        case 'LOGIN_INPUT_ERROR':\n            return {\n                ...state,\n                loginInputError: true\n            }\n        case 'CLOSE_SNACKBAR':\n            return {\n                ...state,\n                addNewOrganizationSnackBar: false,\n                surveyCompletedSnackBar: false,\n                confirmDeactivateSnackBar: false,\n                registrationCompletedSnackBar: false,\n                emailSuccess: false,\n                loginError: false,\n                loginMistype: false,\n                loginInputError: false,\n            }//this one action handles closing all snackbars\n\n        case 'SENDING_EMAILS':\n            return {\n                ...state,\n                sendingEmail: true,\n            }\n\n        case 'EMAIL_ERROR':\n            return {\n                ...state,\n                sendingEmail: false,\n                emailError: true,\n            }\n\n        case 'EMAIL_REDUNDANT':\n            return {\n                ...state,\n                sendingEmail: false,\n                emailRedundant: true,\n            }\n        case 'CONFIRM_EMAIL_ERROR':\n            return {\n                ...state,\n                emailRedundant: false,\n                emailError: false,\n            }\n        case 'REGISTER_ERROR':\n            return {\n                ...state,\n                registerError: true,\n            }\n        case 'CONFIRM_REGISTER_ERROR':\n            return {\n                ...state,\n                registerError: false,\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default messagesReducer;","import { combineReducers } from 'redux';\n\n//this contains all reducers for organization-specific data used to fill the charts\n\nconst avgData = (state = [], action) => {\n    switch (action.type) {\n        case 'GET_AVG_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst specificData = (state = [], action) => {\n    switch (action.type) {\n        case 'GET_SPECIFIC_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst behaviorData = (state = [], action) => {\n    switch (action.type) {\n        case 'GET_BEHAVIOR_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst downloadBehaviorData = (state = [], action) => {\n    switch (action.type) {\n        case 'GET_DOWNLOAD_BEHAVIOR_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst downloadAverageData = (state = [], action) => {\n    switch (action.type) {\n        case 'GET_DOWNLOAD_AVERAGE_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    avgData,\n    specificData,\n    behaviorData,\n    downloadBehaviorData,\n    downloadAverageData\n});","import { combineReducers } from 'redux';\n\nconst behaviors = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_BEHAVIORS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  behaviors,\n});//stores behaviors in the database\n","const addNewOrgReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_NEW_ORGANIZATION':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default addNewOrgReducer;","import { combineReducers } from 'redux';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport adminMainReducer from './adminMainReducer';\nimport survey from './surveyReducer';\nimport addEmployeeReducer from './addEmployeeReducer';\nimport participationReducer from './participationReducer';\nimport messagesReducer from './messagesReducer';\nimport adminChartData from './adminOrgReducer';\nimport behaviorReducer from './behaviorsReducer';\nimport addNewOrgReducer from './addNewOrgReducer';\n\n// rootReducer is the primary reducer for our entire project\n// it bundles up all of the other reducers so our project can use them\n// This is imported in index.js as rootSaga\n\nconst rootReducer = combineReducers({\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  adminMainReducer, //contains organizations in redux state\n  addEmployeeReducer,\n  adminChartData,\n  survey, //this will hold the results of a users weekly survey\n  addNewOrgReducer,\n  participationReducer,\n  behaviorReducer,\n  messagesReducer,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLOSE_SNACKBAR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_MISTYPE' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_ERROR' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registerInvited(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    yield axios.post('api/user/invite', action.payload, config);\n    //logs in the user and allow them to continue to set their\n    //password as something of their own choosing\n    //this will dispatch an action type which triggers a SnackBar alert\n    yield put({ type: 'REGISTRATION_COMPLETED_SNACKBAR' });\n    window.location = '#/main';\n  } catch (error) {\n    console.log('Error with invited user registration:', error);\n    yield put({ type: 'REGISTER_ERROR' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n  yield takeLatest('REGISTER_INVITED', registerInvited);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { call, put, takeLatest } from 'redux-saga/effects';\n\n\nfunction* fetchOrganizations() {\n    try {\n        const response = yield axios.get(`/adminmain`);\n        yield put({ type: 'SET_ORGANIZATIONS', payload: response.data });//fetches organizations from database and sets them in state\n    } catch (error) {\n        console.log('error getting organizations', error);\n    }\n}\n\n\n// Deactivate organization so no longer collecting data\nfunction* deactivateOrganization(action) {\n    try {\n        yield call(axios.put, `adminmain/${action.payload}`);\n        // Fetch organizations again to reload \n        yield put({type: 'FETCH_ORGANIZATIONS'});\n    } catch (error) {\n        console.log('Error in deactivateOrganization in adminMainSaga:', error);\n    }\n}\n\n/**\n * Update organization's name\n */\nfunction* updateOrganization(action) {\n    yield call(axios.post, '/adminmain/org/update', action.payload);\n    yield put({ type: 'FETCH_ORGANIZATIONS' });\n}\n\nfunction* adminMainSaga() {\n    yield takeLatest('FETCH_ORGANIZATIONS', fetchOrganizations); //when componentDidMount runs this action, it runs this generator function //which then runs fetchOrganizations\n    yield takeLatest('DEACTIVATE_ORGANIZATION', deactivateOrganization);\n    yield takeLatest('UPDATE_ORGANIZATION', updateOrganization);\n}\n\nexport default adminMainSaga;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Saga To Add List of Employee Emails\nfunction* addEmployeeEmail(action) {\n  try {\n    yield put({ type: 'SENDING_EMAILS' });\n    const response = yield call(axios.post, '/api/employee', action.payload);\n    \n    if (response.status === 204) {\n      yield put({ type: 'EMAIL_REDUNDANT' });\n    } else {\n      yield put({ type: 'FINISH_EMAILS' });\n    }\n  } catch (error) {\n    console.log('ERROR in addEmployee saga:', error);\n    yield put({type: 'EMAIL_ERROR'});\n  }\n}\n\nfunction* reinviteEmployee(action) {\n  try {\n    yield axios({\n      method: 'PUT',\n      url: '/api/employee/reinvite',\n      params: {email: action.payload}\n    });\n    yield put({ type: 'FINISH_EMAILS' });\n  } catch (error) {\n    console.log('ERROR in reinviteEmployee saga:', error);\n  }\n}\n\nfunction* editEmployee(action) {\n  try {\n    yield axios({\n      method: 'PUT',\n      url: '/api/employee/email',\n      params: {\n        newEmail: action.payload.newEmail,\n        oldEmail: action.payload.oldEmail,\n      }\n    });\n    yield put({ type: 'FETCH_PARTICIPATION', payload: action.payload.org_id});\n  } catch (error) {\n    console.log('ERROR in editEmployee saga:', error);\n  }\n}\n\nfunction* addEmployeeSaga() {\n  yield takeLatest('ADD_EMPLOYEES', addEmployeeEmail);\n  yield takeLatest('REINVITE', reinviteEmployee);\n  yield takeLatest('EDIT_EMPLOYEE', editEmployee);\n}\n\nexport default addEmployeeSaga;","import { put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport Chart from 'chart.js';\n\nlet avgChart;\nlet specificChart;\nconst MIN_PERCENT = 60;\n\nfunction* avgData(action) {\n    try {\n        const orgId = action.payload.id;\n        const response = yield call(axios.get, `/api/adminorg/average/chart/${orgId}`);\n        const avgList = response.data;\n\n        // remove previous data\n        if(avgChart) {\n            avgChart.destroy();\n        }\n\n        let positiveData = avgList.filter(avg => avg.percent >= MIN_PERCENT).map(avg => ({ x: avg.week, y: avg.positive }));\n        let negativeData = avgList.filter(avg => avg.percent >= MIN_PERCENT).map(avg => ({ x: avg.week, y: avg.negative }));\n\n        // draw chart\n        avgChart = new Chart(document.getElementById('adminAverageChart'), {\n            type: 'line',\n            data: {\n                datasets: [{\n                    label: 'Complacent',\n                    data: negativeData,\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    borderWidth: 1,\n                    lineTension: 0\n                }, {\n                    label: 'Healthy',\n                    data: positiveData,\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1,\n                    lineTension: 0\n                }]\n            },\n            options: {\n                responsive: true,\n                legend: {\n                    position: 'bottom',\n                },\n                title: {\n                    display: false,\n                    text: 'Behavior Assessment Averages',\n                    fontSize: 30\n                },\n                scales: {\n                    xAxes: [{ \n                        type: 'linear',\n                        ticks: {\n                            stepSize: 1,\n                            callback: function (dataLabel, index) {\n                                if(dataLabel > -1){\n                                    return 'week'.concat(' ', dataLabel);\n                                }\n                            }\n                        }\n                    }],\n                    yAxes: [{\n                        position: 'left',\n                        display: true,\n                        scaleLabel: {\n                            display: false,\n                            labelString: 'Request State'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                            max: 3,\n                            callback: function (dataLabel, index) {\n                                if (dataLabel === 3) {\n                                    return 'Consistently';\n                                } else if (dataLabel === 0) {\n                                    return 'Rarely'\n                                } else {\n                                    return '';\n                                }\n                            }\n                        }\n                    }]\n                }\n            }\n        });\n\n        yield put({ type: 'GET_AVG_DATA', payload: avgList });\n    } catch (error) {\n        console.log('Error getting average data :', error);\n    }\n}\n\nfunction* specificData(action) {\n    try {\n        const id = action.payload.id;\n        const behaviorId = action.payload.behaviorId;\n\n        if(behaviorId === 0) {\n            yield put({ type: 'BEHAVIOR_DATA' });\n        }\n\n        const response = yield call(axios.get, `/api/adminorg/specific/chart/${id}/${behaviorId}`);\n        const specificList = response.data;\n\n        if(specificChart) {\n            specificChart.destroy();\n        }\n\n        const chartData = specificList.filter(data => data.percent >= MIN_PERCENT).map(data => ({ x: data.week, y: data.avg }));\n        const expectData = specificList.filter(data => data.percent >= MIN_PERCENT).map(data => ({ x: data.week, y: data.expect_avg }));\n\n        specificChart = new Chart(document.getElementById('adminSpecificChart'), {\n            type: 'line',\n            data: {\n                labels: specificList.map(data => 'week'.concat(' ', data.week)),\n                datasets: [{\n                    label: 'Observed',\n                    data: chartData,\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1,\n                },{\n                    label: 'Expected',\n                    data: expectData,\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    borderWidth: 1,\n                }]\n            },\n            options: {\n                responsive: true,\n                legend: {\n                    position: 'bottom',\n                },\n                title: {\n                    display: false,\n                    text: 'Behavior Specific Averages',\n                    fontSize: 30\n                },\n                scales: {\n                    xAxes: [{ \n                        type: 'linear',\n                        ticks: {\n                            stepSize: 1,\n                            callback: function (dataLabel, index) {\n                                if(dataLabel > -1){\n                                    return 'week'.concat(' ', dataLabel);\n                                }\n                            }\n                        }\n                    }],\n                    yAxes: [{\n                        position: 'left',\n                        display: true,\n                        scaleLabel: {\n                            display: false,\n                            labelString: 'Request State'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                            max: 3,\n                            callback: function (dataLabel, index) {\n                                if (dataLabel === 3) {\n                                    return 'Consistently';\n                                } else if (dataLabel === 0) {\n                                    return 'Rarely'\n                                } else {\n                                    return '';\n                                }\n                            }\n                        }\n                    }]\n                }\n            }\n        });\n\n        yield put({ type: 'GET_SPECIFIC_DATA', payload: specificList });\n    } catch(error) {\n        console.log('Error getting specific data :', error);\n    }\n}\n\nfunction* behaviorData() {\n    try {\n        const response = yield call(axios.get, '/api/adminorg/behavior');\n        const behaviorList = response.data;\n\n        yield put({ type: 'GET_BEHAVIOR_DATA', payload: behaviorList });\n    } catch (error) {\n        console.log('Error getting behavior data :', error);\n    }\n}\n\nfunction* downloadData(action) {\n    try {\n        const id = action.payload.id;\n        const behaviorResponse = yield call(axios.get, `/api/adminorg/specific/all/${id}`);\n        const averageResponse = yield call(axios.get, `/api/adminorg/average/all/${id}`);\n        const downloadBehavior = behaviorResponse.data;\n        const downloadAverage = averageResponse.data;\n\n        yield put({ type: 'GET_DOWNLOAD_BEHAVIOR_DATA', payload: downloadBehavior });\n        yield put({ type: 'GET_DOWNLOAD_AVERAGE_DATA', payload: downloadAverage });\n    } catch (error) {\n        console.log('Error getting behavior data :', error);\n    }\n}\n\nfunction* adminOrgSaga() {\n    yield takeLatest('AVG_DATA', avgData);\n    yield takeLatest('SPECIFIC_DATA', specificData);\n    yield takeLatest('BEHAVIOR_DATA', behaviorData);\n    yield takeLatest('DOWNLOAD_DATA', downloadData);\n}\n\nexport default adminOrgSaga;","import { put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport Chart from 'chart.js';\n\nlet specificChart;\nconst MIN_PERCENT = 60;\n\nfunction* userOrgChart(action) {\n    try {\n        const behaviorId = action.payload.behaviorId;\n\n        if(behaviorId === 0) {\n            yield put({ type: 'BEHAVIOR_DATA' });\n        }\n\n        const response = yield call(axios.get, `/api/main/chart/${behaviorId}`);\n        const specificList = response.data;\n\n        if(specificChart) {\n            specificChart.destroy();\n        }\n\n        const chartData = specificList.filter(data => data.percent >= MIN_PERCENT).map(data => ({ x: data.week, y: data.avg }));\n        const expectData = specificList.filter(data => data.percent >= MIN_PERCENT).map(data => ({ x: data.week, y: data.expect_avg }));\n\n        specificChart = new Chart(document.getElementById('userViewChart'), {\n            type: 'line',\n            data: {\n                labels: specificList.map(data => 'week'.concat(' ', data.week)),\n                datasets: [{\n                    label: 'Observed',\n                    data: chartData,\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1,\n                },{\n                    label: 'Expected',\n                    data: expectData,\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    borderWidth: 1,\n                }]\n            },\n            options: {\n                responsive: true,\n                aspectRatio: 1.3,\n                legend: {\n                    position: 'bottom',\n                },\n                title: {\n                    display: false,\n                    text: 'Behavior Specific Averages',\n                    fontSize: 20\n                },\n                scales: {\n                    xAxes: [{ \n                        type: 'linear',\n                        ticks: {\n                            stepSize: 1,\n                            callback: function (dataLabel, index) {\n                                if(dataLabel > -1){\n                                    return 'week'.concat(' ', dataLabel);\n                                }\n                            }\n                        }\n                    }],\n                    yAxes: [{\n                        position: 'left',\n                        display: true,\n                        ticks: {\n                            beginAtZero: true,\n                            max: 3,\n                            fontSize: 10,\n                            callback: function (dataLabel, index) {\n                                if (dataLabel === 3) {\n                                    return 'Consistently';\n                                } else if (dataLabel === 0) {\n                                    return 'Rarely'\n                                } else {\n                                    return '';\n                                }\n                            }\n                        }\n                    }]\n                }\n            }\n        });\n    } catch (error) {\n        console.log('Error getting organization chart data :', error);\n    }\n}\n\nfunction* userMainSaga() {\n    yield takeLatest('USER_ORG_CHART', userOrgChart);\n}\n\nexport default userMainSaga;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* addNewOrganization(action) {\n    try {\n        yield call(axios.post, '/adminmain', action.payload);\n        yield put({ type: 'FETCH_ORGANIZATIONS' })\n    } catch (error) {\n        console.log('ERROR in addNewOrg saga:', error)\n    };\n};\n\nfunction* addNewOrgSaga() {\n    yield takeLatest('ADD_NEW_ORGANIZATION', addNewOrganization);\n}\n\nexport default addNewOrgSaga;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* addNewSurveyResults(action) {\n    try {\n        yield call(axios.post, '/api/surveyresults', action.payload);\n\n        const response = yield call(axios.get, `/api/main/survey/status`);\n        const surveyWeek = response.data[0].survey_week;\n\n        yield put({ type: 'ADD_SURVEY_STATUS', payload: { survey_week: surveyWeek } });\n        window.location.hash = \"#/main\";\n    } catch (error) {\n        console.log('ERROR in addNewSurveyResults saga:', error)\n    };\n};\n\nfunction* surveySaga() {\n    yield takeLatest('SEND_SURVEY_RESULTS', addNewSurveyResults);\n}\n\nexport default surveySaga;//sends survey scores to server","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n\nfunction* fetchParticipation(action) {\n    try {\n        const response = yield axios.get(`/api/surveyresults/${action.payload}`);\n        yield put({ type: 'SET_PARTICIPATION', payload: response.data });//fetches users who have participated from database and sets them in state\n    } catch (error) {\n        console.log('error getting participation', error);\n    }\n}\n\nfunction* participationSaga() {\n    yield takeLatest('FETCH_PARTICIPATION', fetchParticipation); //when componentDidMount runs this action, it runs this generator function\n    //which then runs fetchParticipation\n\n}\n\nexport default participationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n//behaviors are the 6 items in the survey which a user judges\n//this component gets only behavior information\n\n\nfunction* fetchBehaviors(action) {\n    try {\n        const response = yield axios.get(`/api/adminorg/behavior`);\n        yield put({ type: 'SET_BEHAVIORS', payload: response.data });\n    } catch (error) {\n        console.log('error getting participation', error);\n    }\n}\n\nfunction* behaviorSaga() {\n    yield takeLatest('FETCH_BEHAVIORS', fetchBehaviors);\n}\n\nexport default behaviorSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport adminMainSaga from './adminMainSaga';\nimport addEmployeeSaga from './addEmployeeSaga';\nimport adminOrgSaga from './adminOrgSaga';\nimport userMainSaga from './userMainSaga';\nimport addNewOrgSaga from './addNewOrgSaga';\nimport surveySaga from './surveySaga';\nimport participationSaga from './participationSaga';\nimport behaviorSaga from './behaviorSaga';\n\nexport default function* rootSaga() {\n    yield all([\n        adminOrgSaga(),\n        loginSaga(),\n        registrationSaga(),\n        userSaga(),\n        adminMainSaga(),\n        userMainSaga(),\n        addEmployeeSaga(),\n        addNewOrgSaga(),\n        surveySaga(),\n        participationSaga(),\n        behaviorSaga(),\n    ]);\n}\n","// Plyable has access to the admin pages.\n// They can add, manage, and view the organizations.\n// They can invite managers. \nconst ADMIN_ROLE = 0;\n\n// Managers are able to invite employees, take the survey, and view the anonymous graphs. \nconst MANAGER_ROLE = 1;\n\n// Employees can only register from a manager invite. \n// They can fill out the survey and view the anonymous graphs.\nconst EMPLOYEE_ROLE = 2;\n\nexport default {\n  ADMIN_ROLE, \n  MANAGER_ROLE,\n  EMPLOYEE_ROLE,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport ListAlt from '@material-ui/icons/ListAlt';\nimport securityLevel from '../../constants/securityLevel';\n\n//this component adds the Material UI NavDrawer to the application\n//the NavDrawer will display different protected links depending on \n//the user's security level\n\nconst styles = {\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    menuButton: {\n        color: 'white',\n    },\n};\n\nclass NavDrawer extends React.Component {\n    state = {\n        right: false,\n    };\n\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n    handleAdminMainClick = () => {\n        this.props.history.push('/adminmain')\n    }\n    handleMainClick = () => {\n        this.props.history.push('/main')\n    }\n    handleSurveyStatusClick = () => {\n        this.props.history.push('/viewparticipation')\n    }\n    handleAddEmployeesClick = () => {\n        this.props.history.push('/addemployees')\n    }\n    handleInfoClick = () => {\n        this.props.history.push('/info')\n    }\n\n    render(props) {\n        const { classes } = this.props;\n        const sideList = (\n            <div>\n                {this.props.user.security_level === securityLevel.ADMIN_ROLE &&\n                    <div className={classes.list}>\n                        <List>\n                            <ListItem button onClick={this.handleAdminMainClick}>\n                                <ListItemIcon>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Main\" />\n                            </ListItem>\n                        </List>\n                        <Divider />\n                        <List>\n                            <ListItem button onClick={() => this.props.dispatch({ type: 'LOGOUT' })}>\n                                <ListItemIcon>\n                                    <VerifiedUserIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Log Out\" />\n                            </ListItem>\n                        </List>\n                    </div>}\n                {this.props.user.security_level === securityLevel.MANAGER_ROLE &&\n                    <div className={classes.list}>\n                        <List>\n                            <ListItem button onClick={this.handleMainClick}>\n                                <ListItemIcon>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Main\" />\n                            </ListItem>\n                        </List>\n                        <List>\n                            <ListItem button onClick={this.handleSurveyStatusClick}>\n                                <ListItemIcon>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Survey Status\" />\n                            </ListItem>\n                        </List>\n                        <List>\n                            <ListItem button onClick={this.handleAddEmployeesClick}>\n                                <ListItemIcon>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Invite Employees\" />\n                            </ListItem>\n                        </List>\n                        <Divider />\n                        <List>\n                            <ListItem button onClick={() => this.props.dispatch({ type: 'LOGOUT' })}>\n                                <ListItemIcon>\n                                    <VerifiedUserIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Log Out\" />\n                            </ListItem>\n                        </List>\n                    </div>}\n                {this.props.user.security_level === securityLevel.EMPLOYEE_ROLE &&\n                    <div className={classes.list}>\n                        <List>\n                            <ListItem button onClick={this.handleMainClick}>\n                                <ListItemIcon>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Main\" />\n                            </ListItem>\n                            <ListItem button onClick={() => this.props.dispatch({ type: 'LOGOUT' })}>\n                                <ListItemIcon>\n                                    <VerifiedUserIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Log Out\" />\n                            </ListItem>\n                        </List>\n                    </div>}\n            </div>\n        );\n\n        return (\n            <div>\n                <Button onClick={this.toggleDrawer('right', true)} className={classes.menuButton}><MenuIcon /></Button>\n                <Drawer anchor=\"right\" open={this.state.right} onClose={this.toggleDrawer('right', false)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        onClick={this.toggleDrawer('right', false)}\n                        onKeyDown={this.toggleDrawer('right', false)}\n                    >\n                        {sideList}\n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nNavDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n    user: state.user,\n});\n\nconst navDrawerStyles = withStyles(styles)(NavDrawer);\n\nconst navDrawerRouterStyles = withRouter(navDrawerStyles);\n\nexport default connect(mapStateToProps)(navDrawerRouterStyles);\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n/*----Material-UI----*/\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n/*----Material-UI----*/\nimport Logo from '../../images/Logo.png';\nimport NavDrawer from './NavDrawer';\n\n//top nav bar component with logo\n\nconst styles = {\n  appBar: {\n    backgroundColor: \"#00868b\",\n    textAlign: \"center\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass Nav extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <AppBar position=\"static\" className={classes.appBar} >\n          <Toolbar>\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.grow}>\n              <Link className=\"nav-title\" to=\"/adminmain\">\n                <img src={Logo} height=\"60\" alt=\"logo\" />\n              </Link>\n            </Typography>\n            <Typography variant=\"h6\">\n              {this.props.user.id && <NavDrawer />}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nNav.propTypes = { classes: PropTypes.object.isRequired };\n\nconst mapStateToProps = ({ user }) => ({ user });\nconst navStyles = withStyles(styles)(Nav);\n\nexport default connect(mapStateToProps)(navStyles);\n\n\n","import React from 'react';\nimport './Footer.css'\n\nconst Footer = () => (\n  <footer>\n    <img src=\"https://static.wixstatic.com/media/55a6fa_8df7f1de12e241aca43953e67e0e2ca7~mv2.png/v1/fill/w_491,h_460,al_c,q_80,usm_0.66_1.00_0.01/Web_1920_%E2%80%93_34.webp\" height=\"150px\" alt=\"\" />\n    <br />\n    &copy; pontyf\n  </footer>\n\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n/*----Material UI----*/\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n/*----Material UI----*/\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#00868b',\n      sub: '#009688',\n    },\n    secondary: {\n      main: '#EC407A',\n    },\n  }\n});\n\nconst styles = () => ({\n  outFrame: {\n    margin: '10px 5px',\n  },\n  cardFrame: {\n    border: '1px solid #00868b',\n    borderRadius: '20px',\n    margin: '0 auto',\n    maxWidth: '400px',\n    backgroundColor: theme.palette.primary.main,\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: '20px',\n    margin: '10px 0 10px 0',\n  },\n  subBackground: {\n    backgroundColor: 'white',\n    borderRadius: '19px',\n    padding: '15px',\n    textAlign: 'center',\n  },\n  inputDiv: {\n    width: '100%',\n    textAlign: 'left',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  label: {\n    width: '60px',\n    textAlign: 'right',\n    fontSize: '13px',\n  },\n  textField: {\n    boxSizing: 'border-box',\n    margin: '15px 8px',\n    flexGrow: '1',\n    padding: '10px',\n    borderRadius: '20px',\n    outline: 0,\n    border: '1px solid grey',\n    '&:focus': {\n      borderColor: '#00868b',\n    }\n  },\n  buttonDiv: {\n    margin: '15px',\n  },\n});\n\nclass LoginPage extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  login = event => {\n    event.preventDefault();\n    //user authentication\n    if (this.state.email && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          email: this.state.email,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <div className={classes.outFrame}>\n            <form className={classes.cardFrame}>\n              <div className={classes.title}>\n                <span>Welcome to the Portal</span>\n              </div>\n              <div className={classes.subBackground}>\n                <div className={classes.inputDiv}>\n                  <div className={classes.label}>\n                    <label>Email</label>\n                  </div>\n                  <input\n                    className={classes.textField}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                    name=\"Email Address\"\n                    value={this.state.email}\n                    onChange={this.handleInputChangeFor('email')}\n                  />\n                </div>\n                <div className={classes.inputDiv}>\n                  <div className={classes.label}>\n                    <label>Password</label>\n                  </div>\n                  <input\n                    className={classes.textField}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleInputChangeFor('password')}\n                  />\n                </div>\n                <div className={classes.buttonDiv}>\n                  <Button onClick={this.login} variant=\"contained\" type=\"submit\" color=\"primary\">Log In</Button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nLoginPage.propTypes = { classes: PropTypes.object.isRequired };\n\nconst logInPageStyles = withStyles(styles)(LoginPage)\n\nexport default connect()(logInPageStyles);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n    withStyles,\n    Button, \n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogTitle,\n    Typography,\n    createMuiTheme, \n    MuiThemeProvider\n} from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#00868b'\n    }\n  }\n});\n\nconst styles = () => ({\n    outFrame: {\n        margin: '10px 5px',\n    },\n    cardFrame: {\n        border: '1px solid #00868b',\n        borderRadius: '20px',\n        margin: '0 auto',\n        maxWidth: '400px',\n        backgroundColor: '#00868b',\n    },\n    title: {\n        textAlign: 'center',\n        color: 'white',\n        fontSize: '20px',\n        margin: '10px 0 10px 0',\n    },\n    subBackground: {\n        backgroundColor: 'white',\n        borderRadius: '19px',\n        padding: '15px',\n        textAlign: 'center',\n    },\n    inputDiv: {\n        width: '100%',\n        textAlign: 'left',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    label: {\n        width: '60px',\n        textAlign: 'right',\n        fontSize: '13px',\n    },\n    textField: {\n        boxSizing: 'border-box',\n        margin: '15px 8px',\n        flexGrow: '1',\n        padding: '10px',\n        borderRadius: '20px',\n        outline: 0,\n        border: '1px solid grey',\n        '&:focus': {\n            borderColor: '#00868b',\n        }\n    },\n    buttonDiv: {\n        margin: '15px',\n    },\n});\n\nfunction stringToParams(string) {\n    let objectToSend = {};\n    let paramArray;\n    //takes a query string and breaks it out into local parameters\n    string.replace('?', '').split('&')\n        .forEach(param => {\n            paramArray = param.split('=');\n            if (paramArray.length > 1) {\n                objectToSend[paramArray[0]] = decodeURIComponent(paramArray[1]); //decodes escape characters to make email human readable\n            }\n        });\n    return objectToSend;\n}\n\nclass Registration extends Component {\n    state = {\n        email: stringToParams(this.props.location.search).email,\n        password: '',\n        confirmPassword: '',\n        dialogOpen: false,\n    };\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n            [propertyName]: event.target.value,\n        });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        if (this.state.password === this.state.confirmPassword) {\n            this.props.dispatch({ \n                type: 'REGISTER_INVITED', \n                payload: { \n                    password: this.state.password, \n                    ...stringToParams(this.props.location.search) \n                } \n            });\n        } else {\n            this.setState({ dialogOpen: true });\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({ dialogOpen: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className={classes.outFrame}>\n                    <form onSubmit={this.handleSubmit} className={classes.cardFrame}>\n                        <div className={classes.title}>\n                            <span>Register</span>\n                        </div>\n                        <div className={classes.subBackground}>\n                            <div className={classes.inputDiv}>\n                                <div className={classes.label}>\n                                    <label>Email</label>\n                                </div>\n                                <input\n                                    className={classes.textField}\n                                    type=\"text\"\n                                    placeholder=\"Email Address\"\n                                    name=\"Email Address\"\n                                    value={this.state.email}\n                                    onChange={this.handleInputChangeFor('email')}\n                                    disabled\n                                    required \n                                />\n                            </div>\n                            <div className={classes.inputDiv}>\n                                <div className={classes.label}>\n                                    <label>Password</label>\n                                </div>\n                                <input\n                                    className={classes.textField}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.handleInputChangeFor('password')}\n                                    required \n                                />\n                            </div>\n                            <div className={classes.inputDiv}>\n                                <div className={classes.label}>\n                                    <label>Confirm Password</label>\n                                </div>\n                                <input \n                                    className={classes.textField}\n                                    type=\"password\" \n                                    placeholder=\"Password\"\n                                    name=\"confirmPassword\"\n                                    value={this.state.confirmPassword} \n                                    onChange={this.handleInputChangeFor('confirmPassword')} \n                                    required \n                                />\n                            </div>\n                            <div className={classes.buttonDiv}>\n                                <Button onClick={this.login} variant=\"contained\" type=\"submit\" color=\"primary\">Register</Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <Dialog open={this.state.dialogOpen}>\n                    <DialogTitle>Password</DialogTitle>\n                    <DialogContent>\n                        <Typography component=\"p\">Your password doesn't match.</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color=\"primary\" onClick={this.handleCancel}>Okay</Button>\n                    </DialogActions>\n                </Dialog>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default connect()(withRouter(withStyles(styles)(Registration)));","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport Registration from '../Registration/Registration';\n\n//this is a Custom Wrapper Component to help keep our code DRY\n//responsible for watching redux state, and returning an appropriate component\n//API for this component is the same as a regular route\n\n// this is not security; that is done on the server\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the Registration\n    ComponentToShow = Registration;\n  }\n\n  //we return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n      component={ComponentToShow}\n    />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, withStyles } from '@material-ui/core';\nimport Mail from '@material-ui/icons/MailOutline';\nimport Edit from '@material-ui/icons/EditOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    outFrame: {\n        margin: '10px 5px',\n    },\n    cardFrame: {\n        border: '1px solid #00868b',\n        borderRadius: '20px',\n        margin: '0 auto',\n        maxWidth: '710px',\n        backgroundColor: theme.palette.primary.main,\n    },\n    title: {\n        textAlign: 'center',\n        color: 'white',\n        fontSize: '20px',\n        margin: '10px 0 10px 0',\n    },\n    subBackground: {\n        backgroundColor: 'white',\n        borderRadius: '19px',\n        padding: '10px',\n        maxHeight: '300px',\n        overflow: 'scroll',\n    },\n    table: {\n        borderCollapse: 'collapse',\n        width: '100%',\n    },\n    emailTd: {\n        border: 'none',\n        paddingLeft: '10px',\n        fontSize: '11px',\n    },\n    buttonTd: {\n        border: 'none',\n        textAlign: 'right',\n    },\n    emailInput: {\n        width: '95%',\n        padding: '10px',\n        boxSizing: 'border-box',\n        outline: '0',\n        border: '1px solid #00868b',\n        borderRadius: '5px',\n    },\n});\n\nclass FullList extends Component {\n    state = {\n        oldEmail: '',\n        newEmail: '',\n        editBox: false,\n    }\n\n    componentDidMount() {\n        const id = this.props.user.org_id\n        this.props.dispatch({ type: 'FETCH_PARTICIPATION', payload: id });\n    }\n\n    handleClick = email => () => {\n        this.props.dispatch({ type: 'REINVITE', payload: email });\n    }\n\n    handleChange = event => {\n        this.setState({\n            ...this.state,\n            newEmail: event.target.value\n        });\n    }\n\n    handleCancel = () => {\n        this.setState({\n            oldEmail: '',\n            newEmail: '',\n            editBox: false,\n        });\n    }\n\n    handleEdit = employee => () => {\n        this.setState({\n            ...this.state,\n            oldEmail: employee.email,\n            editBox: true,\n        });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'EDIT_EMPLOYEE', payload: { ...this.state, org_id: this.props.user.org_id } });\n        this.handleCancel();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const employees = this.props.participationReducer;\n        return (\n            <div>\n                <div className={classes.outFrame}>\n                    <div className={classes.cardFrame}>\n                        <p className={classes.title}>\n                            {employees.length} registered {employees.length > 1 ? 'employees' : 'employee'}\n                        </p>\n                        <div className={classes.subBackground}>\n                            <table className={classes.table}>\n                                <tbody>\n                                {employees.map(employee =>\n                                    <tr key={employee.email}>\n                                        <td className={classes.emailTd}>{employee.email}</td>\n                                        <td className={classes.buttonTd}>\n                                            <Button\n                                                onClick={this.handleClick(employee.email)}\n                                                className={classes.buttons}\n                                                color=\"primary\"\n                                            >\n                                                re-invite<Mail />\n                                            </Button>\n                                            <Button\n                                                onClick={this.handleEdit(employee)}\n                                                className={classes.buttons}\n                                                color=\"primary\"\n                                            >\n                                                edit<Edit />\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                )}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <Dialog open={this.state.editBox}>\n                    <DialogTitle>Enter New Email</DialogTitle>\n                    <input \n                        type=\"email\" \n                        onChange={this.handleChange} \n                        value={this.state.newEmail} \n                        className={classes.emailInput}\n                        placeholder=\"email@email.net\"\n                    />\n                    <DialogActions>\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Send</Button>\n                        <Button color=\"secondary\" onClick={this.handleCancel}>Cancel</Button>\n                    </DialogActions>\n                </Dialog>\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, participationReducer }) => ({ user, participationReducer });\n\nexport default connect(mapStateToProps)(withStyles(styles)(FullList));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport securityLevel from '../../constants/securityLevel';\nimport FullList from './FullList';\nimport { Button, withStyles, Typography } from '@material-ui/core';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#00868b',\n    },\n  }\n});\n\nconst styles = () => ({\n  outFrame: {\n    margin: '10px 5px',\n  },\n  cardFrame: {\n    border: '1px solid #00868b',\n    borderRadius: '20px',\n    margin: '0 auto',\n    maxWidth: '710px',\n    backgroundColor: theme.palette.primary.main,\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: '20px',\n    margin: '10px 0 10px 0',\n  },\n  subBackground: {\n    backgroundColor: 'white',\n    borderRadius: '19px',\n    padding: '10px',\n  },\n  textField: {\n    width: '100%',\n    borderRadius: '10px',\n    padding: '10px',\n    height: '100px',\n    boxSizing: 'border-box',\n    outline: '0',\n    border: '1px solid #00868b',\n    resize: 'none',\n  },\n  subTitle: {\n    color: 'grey',\n    marginLeft: '10px',\n    fontSize: '13px',\n  },\n  buttonDiv: {\n    textAlign: 'right',\n    marginTop: '5px',\n  },\n  button: {\n    borderRadius: '13px',\n  },\n});\n\nclass AddEmployees extends Component {\n  state = {\n    emailList: [],\n    dialogOpen: false,\n  }\n\n  // Button Click\n  sendInvitationEmails = async () => {\n    // If box has content, send\n    if (this.state.emailList.length > 0) {\n      let splitList = this.state.emailList.split('\\n'); // creates comma separate array  \n\n      await this.props.dispatch({ type: 'ADD_EMPLOYEES', payload: { emailList: splitList } });  // Adds Employee Emails to the DB\n      this.setState({ emailList: [] });\n    } else { // alert that content is needed\n      this.setState({ dialogOpen: true });\n    }\n  }\n\n  // Collect the data entered into the box\n  handleChange = (event) => {\n    this.setState({ emailList: event.target.value });\n  }\n\n  handleCancel = () => {\n    this.setState({ dialogOpen: false });\n  }\n\n  componentDidMount = () => {\n    if (this.props.user.security_level === securityLevel.EMPLOYEE_ROLE) {\n      this.props.history.push('/main');\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className={classes.outFrame}>\n          <div className={classes.cardFrame}>\n            <p className={classes.title}>Invite Members</p>\n            <div className={classes.subBackground}>\n              <p className={classes.subTitle}>Enter of paste email addresses here</p>\n              <textarea\n                value={this.state.emailList}\n                onChange={this.handleChange}\n                className={classes.textField}\n                placeholder='No Commas'\n              ></textarea>\n              {/* OnClick rather than submit, to allow enter for new line */}\n              <div className={classes.buttonDiv}>\n                <Button\n                  onClick={this.sendInvitationEmails}\n                  className={classes.button}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  Send\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <FullList />\n        <Dialog open={this.state.dialogOpen}>\n          <DialogTitle>Error</DialogTitle>\n          <DialogContent>\n            <Typography component=\"p\">Please add emails. 1 Per line. No Commas.</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.handleCancel}>Okay</Button>\n          </DialogActions>\n        </Dialog>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nexport default connect(mapStateToProps)(withStyles(styles)(AddEmployees));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core';\nimport { TablePagination, List, ListItem, Paper } from '@material-ui/core';\n\nconst styles = () => ({\n    feedbackList: {\n        width: '350px',\n        margin: '25px',\n    },\n    innerPaper: {\n        padding: '10px',\n    },\n    margin: {\n        margin: 10\n    }\n});\n\nclass CompletedFeedback extends Component {\n    state = {\n        rowsPerPage: 6,\n        page: 0,\n    }\n\n    componentDidMount() {\n        const arr = window.location.hash.split('/');\n        let id;\n        if (this.props.useOrgId) {\n            id = this.props.reduxState.user.org_id\n        } else {\n            id = this.props.id || arr[arr.length - 1] === '' ? arr[arr.length - 2] : arr[arr.length - 1];\n        }\n        this.props.dispatch({ type: 'FETCH_PARTICIPATION', payload: id });\n    }\n\n    //pagination\n    handleChangeRowsPerPage = event => {\n        this.setState({\n            ...this.state,\n            rowsPerPage: event.target.value\n        });\n    }\n    //pagination\n    handleChangePage = (event, page) => {\n        this.setState({\n            ...this.state,\n            page,\n        });\n    }\n\n    render() {\n        const { rowsPerPage, page } = this.state;\n        let employees = this.props.reduxState.participationReducer;\n        let uncompleted = employees.filter(employee => Number(employee.count) === 0);\n        const { classes } = this.props;\n        return (\n            <div className={classes.margin}>\n                {/*Iterates through total employees in organization, checks those who have completed their surveys and subtracts it from the total*/}\n                <h4>{employees.length - uncompleted.length}/{employees.length} {this.props.reduxState.adminMainReducer.name} employees have completed their survey</h4>\n                {uncompleted.length > 0 &&\n                    <div className={classes.feedbackList}>\n                        <Paper>\n                            <div className={classes.innerPaper}>\n                                <br />\n                                <h3>Awaiting Response From...</h3>\n                                <List>\n                                    {uncompleted.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map(employee => <ListItem key={employee.email}>{employee.email}</ListItem>)}\n                                </List>\n                            </div>\n                        </Paper>\n                        <TablePagination\n                            rowsPerPageOptions={[6, 12, 24]}\n                            component=\"div\"\n                            count={uncompleted.length}\n                            labelRowsPerPage=\"Emails per page\"\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={this.handleChangePage}\n                            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        />\n                    </div>}\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({ reduxState });\n\nexport default connect(mapStateToProps)(withStyles(styles)(CompletedFeedback));","// Scope: Organization Specific Data (charts)\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CompletedFeedback from '../CompletedFeedback/CompletedFeedback';\nimport { Button, withStyles, Typography } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nlet arr = window.location.hash.split('/');\nlet id = arr[arr.length - 1] === '' ? arr[arr.length - 2] : arr[arr.length - 1];\n\nconst styles = () => ({\n    cardFrame: {\n        border: '1px solid #00868b',\n        borderRadius: '20px',\n        margin: '15px auto',\n        width: '70vw',\n        backgroundColor: '#00868b',\n    },\n    title: {\n        textAlign: 'center',\n        color: 'white',\n        fontSize: '20px',\n        margin: '10px 0 10px 0',\n    },\n    subBackground: {\n        backgroundColor: 'white',\n        borderRadius: '19px',\n        padding: '15px',\n        textAlign: 'center',\n    },\n    selectBox: {\n        width: '80%',\n        height: '50px',\n        fontSize: '20px',\n        backgroundColor: '#00868bbb',\n        color: 'white',\n        border: '1px solid #00868b',\n        outline: 'none',\n        textAlign: 'center',\n        textAlignLast: 'center',\n        marginBottom: '15px',\n    },\n    downloadButtonDiv: {\n        textAlign: 'right',\n    },\n    buttons: {\n        background: 'linear-gradient(45deg, #4680fb 40%, #aaa 90%)',\n        borderRadius: 5,\n        border: 0,\n        color: 'white',\n        height: 24,\n        padding: '0 10px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 185, .3)',\n    },\n    margin: {\n        margin: 10\n    }\n})\n\nclass AdminOrgMain extends Component {\n    state = {\n        dialogOpen: false,\n    }\n\n    convertArrayOfObjectsToCSV = (args) => {\n        let result, ctr, keys, columnDelimiter, lineDelimiter, data, title;\n\n        data = args.data || null;\n        if (data == null || !data.length) {\n            return null;\n        }\n\n        title = args.title || '';\n\n        columnDelimiter = args.columnDelimiter || ',';\n        lineDelimiter = args.lineDelimiter || '\\n';\n\n        keys = Object.keys(data[0]);\n        keys.shift();\n\n        result = '';\n        result += title;\n        result += lineDelimiter;\n        result += keys.join(columnDelimiter);\n        result += lineDelimiter;\n\n        data.forEach(item => {\n            ctr = 0;\n            if (title === item.value) {\n                keys.forEach(key => {\n                    if (ctr > 0) result += columnDelimiter;\n\n                    if (item[key] !== item.value) {\n                        result += item[key];\n                        ctr++;\n                    }\n                });\n                result += lineDelimiter;\n            }\n        });\n\n        return result += lineDelimiter;\n    }\n\n    downloadCSV = keyword => () => {\n        let data, link, csv = '', valueList = [];\n\n        if (keyword === 'behaviors') {\n            const dataList = this.props.downloadBehaviorData.map(data => ({\n                value: data.value,\n                \"Time_in_Weeks\": data.week,\n                \"Avg_Score\": data.avg,\n                \"Expectation_Score\": data.expect_avg,\n                \"#_of_Responses\": data.user_count,\n                \"Total_Users\": data.total_count,\n                \"%_of_Responses\": data.percent\n            }));\n\n            for (let data of this.props.downloadBehaviorData) {\n                let str = data.value;\n                if (valueList.indexOf(str) < 0) {\n                    valueList.push(data.value);\n                }\n            }\n\n            for (let value of valueList) {\n                csv += this.convertArrayOfObjectsToCSV({\n                    title: value,\n                    data: dataList,\n                    keyword: keyword\n                });\n            }\n        } else if (keyword === 'average') {\n            const dataList = this.props.downloadAverageData.map(data => ({\n                value: 'Behavior Average Data',\n                \"Time_in_Weeks\": data.week,\n                \"Positive_Avg_Score\": data.positive,\n                \"Negative_Avg_Score\": data.negative,\n                \"#_of_Responses\": data.user_count,\n                \"Total_Users\": data.total_count,\n                \"%_of_Responses\": data.percent\n            }));\n\n            csv = this.convertArrayOfObjectsToCSV({\n                title: 'Behavior Average Data',\n                data: dataList,\n                keyword: keyword\n            });\n        }\n\n        if (csv === '' || csv === null || csv === undefined) {\n            this.setState({ dialogOpen: true });\n            return;\n        }\n\n        if (!csv.match(/^data:text\\/csv/i)) {\n            csv = 'data:text/csv;charset=utf-8,' + csv;\n        }\n        data = encodeURI(csv);\n\n        link = document.createElement('a');\n        link.setAttribute('href', data);\n        link.setAttribute('download', this.getFileName(keyword));\n        link.click();\n    }\n\n    getFileName = keyword => {\n        let filename = 'noname.csv';\n\n        if (keyword === 'behaviors') {\n            filename = 'behavior_specific_' + Date.now() + '.csv';\n        } else if (keyword === 'average') {\n            filename = 'behavior_average_' + Date.now() + '.csv';\n        }\n\n        return filename;\n    }\n\n    handleChangeBehavior = event => {\n        this.props.dispatch({ type: 'SPECIFIC_DATA', payload: { id: id, behaviorId: event.target.value } });\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            dialogOpen: false,\n        });\n    }\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'AVG_DATA', payload: { id: id } });\n        this.props.dispatch({ type: 'SPECIFIC_DATA', payload: { id: id, behaviorId: 0 } });\n        this.props.dispatch({ type: 'DOWNLOAD_DATA', payload: { id: id } });\n    }\n\n    render() {\n        arr = window.location.hash.split('/');\n        id = arr[arr.length - 1] === '' ? arr[arr.length - 2] : arr[arr.length - 1];\n        const { classes } = this.props;\n        return (\n            <div className={classes.margin}>\n                <div>\n                    <Button\n                        onClick={this.goBack}\n                        classes={{\n                            root: classes.buttons,\n                        }}>\n                        Back\n                    </Button>\n                </div>\n                <CompletedFeedback />\n                <div className={classes.cardFrame}>\n                    <div className={classes.title}>Behavior Assessment Averages</div>\n                    <div className={classes.subBackground}>\n                        <canvas id=\"adminAverageChart\"></canvas>\n                        <div className={classes.downloadButtonDiv}>\n                            <Button\n                                onClick={this.downloadCSV('average')}\n                                classes={{\n                                    root: classes.buttons,\n                                }}>Download CSV</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.cardFrame}>\n                    <div className={classes.title}>Behavior Specific Averages</div>\n                    <div className={classes.subBackground}>\n                        <select className={classes.selectBox} onChange={this.handleChangeBehavior}>\n                            {this.props.behaviorData.map(behavior => <option key={behavior.id} value={behavior.id}>{behavior.value}</option>)}\n                        </select>\n                        <canvas id=\"adminSpecificChart\"></canvas>\n                        <div className={classes.downloadButtonDiv}>\n                            <Button\n                                onClick={this.downloadCSV('behaviors')}\n                                classes={{\n                                    root: classes.buttons,\n                                }}>Download CSV</Button>\n                        </div>\n                    </div>\n                </div>\n                <Dialog open={this.state.dialogOpen}>\n                    <DialogTitle>No Data</DialogTitle>\n                    <DialogContent>\n                        <Typography component=\"p\">There is no data to download.</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color=\"primary\" onClick={this.handleCancel}>Okay</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ adminChartData }) => ({\n    avgData: adminChartData.avgData,\n    specificData: adminChartData.specificData,\n    behaviorData: adminChartData.behaviorData,\n    downloadBehaviorData: adminChartData.downloadBehaviorData,\n    downloadAverageData: adminChartData.downloadAverageData,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(withRouter(AdminOrgMain)));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nclass NextButton extends Component {\n\n    handleClick = () => {\n        this.props.handleSubmit();\n        //handleSubmit changes redux state, and changes the local state of BehaviorCard\n        this.props.switchCard(this.props.number, 'next');\n        //swichCard changes the local state of Survey.\n    }\n\n    render() {\n        return (\n            <Button\n                size=\"small\"\n                color=\"primary\"\n                onClick={this.handleClick}\n                disabled={this.props.disabled}\n            >\n                Next<KeyboardArrowRight />\n            </Button>\n        )\n    }\n}\n\nexport default connect()(NextButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\n\nclass PrevButton extends Component {\n\n    handleClick = () => {\n        this.props.switchCard(this.props.number, 'prev');\n        //swichCard changes the local state of Survey.\n    }\n\n    render() {\n        return (\n            <Button\n                size=\"small\"\n                color=\"secondary\"\n                onClick={this.handleClick}\n                disabled={this.props.disabled}\n            >\n                <KeyboardArrowLeft />Back\n            </Button>\n        )\n    }\n}\n\nexport default connect()(PrevButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nclass SubmitButton extends Component {\n\n    handleClick = () => {\n        this.props.dispatch({ \n            type: 'SEND_SURVEY_RESULTS', \n            payload: { \n                survey: [\n                    ...this.props.survey,\n                    {\n                        id: this.props.lastCard.id,\n                        score: this.props.score,\n                        expectScore: this.props.expectationScore,\n                        value: this.props.lastCard.value\n                    }\n                ]\n            } \n        });\n        //this sends the survey results, as stored in redux state to a saga and\n        //eventually to the server\n        this.props.dispatch({ type: 'SURVEY_COMPLETED_SNACKBAR' })//this will dispatch an action type which triggers a SnackBar alert\n\n    }\n\n    render() {\n        return (\n            <Button \n                size=\"small\" \n                color=\"primary\" \n                onClick={this.handleClick}\n                disabled={this.props.disabled}\n            >\n                Finish Survey\n            </Button>\n        )\n    }\n}\n\nconst mapStateToProps = ({ survey }) => ({ \n    survey: survey.surveyScore, \n    expectationSurvey: survey.expectationScore  \n});\n\nexport default connect(mapStateToProps)(withRouter(SubmitButton));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NextButton from './NextButton';\nimport PrevButton from './PrevButton';\nimport SubmitButton from './SubmitButton';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n//main component for actual survey\n\nconst styles = () => ({\n    root: {\n        margin: '0 1px',\n    },\n    card: {\n        maxWidth: '700px',\n        margin: '0 auto',\n        borderRadius: '18px',\n    },\n    value: {\n        fontSize: '20px',\n        margin: '15px 0',\n        textAlign: 'left',\n    },\n    subTitle: {\n        marginLeft: '10px',\n        marginTop: '10px',\n    },\n    formDiv: {\n        textAlign: 'center',\n        marginBottom: '15px',\n    },\n    formControl: {\n        width: '100%',\n    },\n    radioLabel: {\n        margin: '0',\n        width: '25%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n}); //material ui styles\n\nclass BehaviorCard extends Component {\n    state = {\n        score: null,\n        expectationScore: null,\n    }\n\n    //handleChange takes in a integer 0 through 3 and returns an anonymous callback\n    //function that sets the local state to that integer when called\n    handleChange = property => event => {\n        this.setState({ [property]: event.target.value });\n    }\n\n    //this function runs whenever the client clicks the next or prev button, and updates redux state\n    handleSubmit = () => {\n        this.props.dispatch({\n            type: 'SET_SCORE',\n            payload: {\n                id: this.props.card.id,\n                value: this.props.card.value,\n                score: this.state.score,\n                expectScore: this.state.expectationScore,\n            }\n        });\n        this.setState({ score: null, expectationScore: null });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography gutterBottom className={classes.value} variant=\"h4\" component=\"h2\">\n                            How often do you experience or observe <b>{this.props.card.value}</b>?\n                        </Typography>\n                        <Typography component=\"p\">\n                            <u>{this.props.card.value}</u> : {this.props.card.definition}\n                        </Typography>\n                        <Typography className={classes.subTitle} component=\"p\">\n                            &gt; How often do you observe this behavior?\n                        </Typography>\n                        <div className={classes.formDiv}>\n                            <FormControl className={classes.formControl}>\n                                <RadioGroup\n                                    aria-label=\"Behavior\"\n                                    name=\"behavior\"\n                                    value={this.state.score}\n                                    onChange={this.handleChange('score')}\n                                    row\n                                >\n                                    <FormControlLabel className={classes.radioLabel} value=\"0\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Rarely\" />\n                                    <FormControlLabel className={classes.radioLabel} value=\"1\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Sometimes\" />\n                                    <FormControlLabel className={classes.radioLabel} value=\"2\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Weekly\" />\n                                    <FormControlLabel className={classes.radioLabel} value=\"3\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Consistently\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                        <Typography className={classes.subTitle} component=\"p\">\n                            &gt; How often would you expect to observe this behavior?\n                        </Typography>\n                        <div className={classes.formDiv}>\n                            <FormControl className={classes.formControl}>\n                                <RadioGroup\n                                    aria-label=\"Expection Behavior\"\n                                    name=\"expectationBehavior\"\n                                    value={this.state.expectationScore}\n                                    onChange={this.handleChange('expectationScore')}\n                                    row\n                                >\n                                    <FormControlLabel className={classes.radioLabel} value=\"0\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Rarely\" />\n                                    <FormControlLabel className={classes.radioLabel} value=\"1\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Sometimes\" />\n                                    <FormControlLabel className={classes.radioLabel} value=\"2\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Weekly\" />\n                                    <FormControlLabel className={classes.radioLabel} value=\"3\" control={<Radio color=\"primary\" />} labelPlacement=\"bottom\" label=\"Consistently\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </div>\n                    </CardContent>\n                    <CardActions>\n                        <PrevButton\n                            number={this.props.current - 1}\n                            switchCard={this.props.switchCard}\n                            disabled={this.props.current > 0 ? false : true}\n                        />\n                        <div className={classes.grow} />\n                        {this.props.cardNumber + 1 < 6 ?\n                            <NextButton\n                                number={this.props.current + 1}\n                                switchCard={this.props.switchCard}\n                                handleSubmit={this.handleSubmit}\n                                disabled={this.state.score !== null && this.state.expectationScore !== null ? false : true}\n                            /> :\n                            <SubmitButton\n                                lastCard={this.props.card}\n                                score={this.state.score}\n                                expectationScore={this.state.expectationScore}\n                                disabled={this.state.score !== null && this.state.expectationScore !== null ? false : true}\n\n                            />\n                        }\n                    </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\nBehaviorCard.propTypes = { classes: PropTypes.object.isRequired };\nconst mapStateToProps = ({ survey }) => ({ survey: survey.surveyScore });\nconst behaviorCardStyles = withStyles(styles)(BehaviorCard);\n\nexport default connect(mapStateToProps)(behaviorCardStyles);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport BehaviorCard from './BehaviorCard';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        primary: {\n            main: '#00868b',\n            sub: '#009688',\n        },\n        secondary: {\n            main: '#EC407A',\n        },\n    }\n});\n\nconst styles = () => ({\n    outFrame: {\n        margin: '0 5px',\n    },\n    cardFrame: {\n        border: '1px solid #00868b',\n        borderRadius: '20px',\n        margin: '0 auto',\n        padding: '0 0 1px 0',\n        maxWidth: '710px',\n        backgroundColor: theme.palette.primary.main,\n    },\n    title: {\n        textAlign: 'center',\n        color: 'white',\n        fontSize: '25px',\n        margin: '10px 0 15px 0',\n    },\n    stepper: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    connectorActive: {\n        '& $connectorLine': {\n            borderColor: theme.palette.primary.sub,\n        },\n    },\n    connectorCompleted: {\n        '& $connectorLine': {\n            borderColor: theme.palette.primary.main,\n        },\n    },\n    connectorDisabled: {\n        '& $connectorLine': {\n            borderColor: theme.palette.grey[100],\n        },\n    },\n    connectorLine: {\n        transition: theme.transitions.create('border-color'),\n    },\n});\n\nclass Survey extends Component {\n    state = {\n        openCard: 0, //this determines which of the cards is being rendered\n    }\n\n    componentDidMount = () => {\n        //on mount, fetch data regarding this week's survey\n        this.props.dispatch({ type: 'FETCH_BEHAVIORS' });\n    }\n\n    switchCard = (number, keyword) => {\n        this.setState({ openCard: number });\n        if (keyword === 'prev') {\n            this.props.dispatch({\n                type: 'REMOVE_BEHAVIOR',\n                payload: {\n                    id: this.props.behaviors[this.state.openCard - 1].id\n                }\n            });\n        }\n    }\n\n    render() {\n        let cards = this.props.behaviors;\n        const { classes } = this.props;\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Stepper\n                    activeStep={this.state.openCard}\n                    connector={\n                        <StepConnector\n                            classes={{\n                                active: classes.connectorActive,\n                                completed: classes.connectorCompleted,\n                                disabled: classes.connectorDisabled,\n                                line: classes.connectorLine,\n                            }}\n                        />\n                    }\n                >\n                    {cards.map(card => <Step key={card.id}><StepLabel></StepLabel></Step>)}\n                </Stepper>\n                <div className={classes.outFrame}>\n                    <div className={classes.cardFrame}>\n                        <p className={classes.title}>At <b>{this.props.user.org_name}</b>...</p>\n                        <BehaviorCard\n                            card={cards[this.state.openCard] || { value: 'Loading' }}\n                            current={this.state.openCard}\n                            switchCard={this.switchCard}\n                            cardNumber={this.state.openCard}\n                        />\n                    </div>\n                </div>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst mapStateToProps = ({ behaviorReducer, user }) => ({\n    behaviors: behaviorReducer.behaviors,\n    user,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Survey));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport securityLevel from '../../constants/securityLevel';\n\nconst styles = () => ({\n    title: {\n        marginLeft: '15px',\n        color: '#00868b',\n        textAlign: 'center',\n    },\n    info: {\n        marginLeft: '15px',\n        color: 'black'\n    },\n    chartFrame: {\n        margin: '0 10px',\n    },\n    cardFrame: {\n        border: '1px solid #00868b',\n        borderRadius: '20px',\n        margin: '15px auto',\n        maxWidth: '700px',\n        backgroundColor: '#00868b',\n    },\n    chartTitle: {\n        textAlign: 'center',\n        color: 'white',\n        fontSize: '20px',\n        margin: '10px 0 10px 0',\n    },\n    subBackground: {\n        backgroundColor: 'white',\n        borderRadius: '19px',\n        padding: '15px',\n        textAlign: 'center',\n    },\n    selectBox: {\n        width: '80%',\n        height: '35px',\n        fontSize: '20px',\n        backgroundColor: '#00868bbb',\n        color: 'white',\n        border: '1px solid #00868b',\n        outline: 'none',\n        textAlign: 'center',\n        textAlignLast: 'center',\n        marginBottom: '15px',\n    },\n});//Material UI styles\n\nclass UserMain extends Component {\n    componentDidMount = () => {\n        //this will fetch and display data dependent upon the user's security level\n        //for admin, it will show AdminMain, for users it will take them to the survey\n        //if they haven't completed it for the week or the org chart if they have\n        if (this.props.user.security_level === securityLevel.ADMIN_ROLE) {\n            this.props.history.push('/adminmain');\n        } else {\n            if (this.props.user.survey_week < 0) {\n                this.props.history.push('/survey');\n            } else {\n                this.props.dispatch({ type: 'FETCH_BEHAVIORS' });\n                this.props.dispatch({ type: 'USER_ORG_CHART', payload: { behaviorId: 0 } });\n            }\n        }\n    }\n\n    handleChangeBehavior = event => {\n        this.props.dispatch({ type: 'USER_ORG_CHART', payload: { behaviorId: event.target.value } });\n    }\n\n    // Messages to user based on 1) completed survey for the week 2) won't see data until next week\n    renderMessage = () => {\n        if (Number(this.props.user.survey_week) === 0) {\n            return <h4>You will not see data in the graphs until next week.</h4>\n        }\n        else if (this.props.user.survey_week >= 0) {\n            return <h4>You have completed your survey for this week.</h4>\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <h2 className={classes.title}>{this.props.user.org_name}</h2>\n                <div className={classes.info}>\n                    {this.renderMessage()}\n                    <h4>Note: Organization data will only be shown if 60% or more employees have responded.</h4>\n                </div>\n                <div className={classes.chartFrame}>\n                    <div className={classes.cardFrame}>\n                        <div className={classes.chartTitle}>Behavior Specific Averages</div>\n                        <div className={classes.subBackground}>\n                            <select\n                                onChange={this.handleChangeBehavior}\n                                className={classes.selectBox}\n                            >\n                                {this.props.behaviors.map(behavior => <option key={behavior.id} value={behavior.id}>{behavior.value}</option>)}\n                            </select>\n                            <canvas id=\"userViewChart\"></canvas>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, behaviorReducer }) => ({\n    user,\n    behaviors: behaviorReducer.behaviors,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(withRouter(UserMain)));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport securityLevel from '../../constants/securityLevel';\n/*----Material UI---*/\nimport {\n    Table, TableBody, TableCell, TableHead, TableRow, TablePagination,\n    Paper, Typography, TextField, withStyles\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n/*----Material UI---*/\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n        fontSize: 24,\n    },\n    body: {\n        fontSize: 20,\n        textTransform: 'upperCase'\n    },\n}))(TableCell);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    buttons: {\n        background: 'linear-gradient(45deg, #00868b 30%, #aaa 90%)',\n        borderRadius: 2,\n        border: 0,\n        color: 'white',\n        height: 24,\n        padding: '0 10px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    deactivate: {\n        background: 'linear-gradient(45deg, #192343 30%, red  90%)',\n        borderRadius: 2,\n        border: 0,\n        color: 'white',\n        height: 24,\n        padding: '0 10px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    label: {\n        textTransform: 'capitalize',\n        fontSize: 14,\n    },\n    table: {\n        minWidth: 700,\n    },\n    row: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    margin: {\n        margin: 15\n    }\n});\n\n\nclass AdminMain extends Component {\n    state = {\n        emailList: '',\n        org_id: 0,\n        deactivateDialog: false,\n        addManager: false,\n        editDialog: false,\n        organization: {},\n        orgName: '',\n        page: 0,\n        rowsPerPage: 6,\n    };\n\n    componentDidMount() {\n        if (this.props.reduxState.user.security_level !== securityLevel.ADMIN_ROLE) {\n            this.props.history.push('/main');\n        } else {\n            this.props.dispatch({ type: 'FETCH_ORGANIZATIONS', payload: this.props.reduxState.adminMainReducer })\n        }\n    };//this will fetch all organizations from the database upon page load\n\n    handleAddNewOrganizationClick = () => {\n        this.props.history.push('/adminmain/createneworganization');\n    }; //this button will take the admin to a form to add a new organization\n\n    handleViewOrgClick = (id) => {\n        this.props.history.push(`/adminmain/organization/${id}`);\n    }//this button will take the admin to an organization-specific admin page\n\n    //this button will deactivate the organization, thereby stop the collection of data, but the data will still be viewable\n    handleDeactivateClick = (org_id) => {\n        this.setState({ deactivateDialog: true, org_id: org_id }) // open dialog box\n    }\n\n    handleDeactivateConfirm = (org_id) => {\n        this.props.dispatch({ type: 'DEACTIVATE_ORGANIZATION', payload: org_id });\n        this.setState({ ...this.state, deactivateDialog: false })\n        this.props.dispatch({ type: 'CONFIRM_DEACTIVATE_SNACKBAR' })//this will dispatch an action type which triggers a SnackBar alert\n    }\n\n    handleCancelDeactivate = () => {\n        this.setState({ ...this.state, deactivateDialog: false })\n    }\n\n    // show edit dialog and store organization's name in state\n    handleEditOrgClick = organization => () => {\n        this.setState({\n            org_id: organization.id,\n            orgName: organization.name,\n            editDialog: true\n        });\n    }\n\n    // change orgName in state\n    handleChangeOrgName = event => {\n        this.setState({ orgName: event.target.value });\n    }\n\n    // close dialog when cancel button is clicked\n    handleEditCancelClick = () => {\n        this.setState({ editDialog: false });\n    }\n\n    // close dialog and update organization name\n    handleUpdateOrgClick = () => {\n        this.setState({ editDialog: false });\n        this.props.dispatch({\n            type: 'UPDATE_ORGANIZATION',\n            payload: {\n                id: this.state.org_id,\n                name: this.state.orgName,\n            }\n        });\n    }\n    //this is the same code for adding employees\n    handleAddManagers = id => () => {\n        this.setState({\n            ...this.state,\n            org_id: id,\n            addManager: true\n        });\n    }\n\n    handleCancelAddManager = () => {\n        this.setState({\n            ...this.state,\n            emailList: '',\n            org_id: 0,\n            addManager: false\n        });\n    }\n\n    sendInvitationEmails = () => {\n        let splitList = this.state.emailList.split('\\n'); // creates comma separate array  \n        this.props.dispatch({ type: 'ADD_EMPLOYEES', payload: { ...this.state, emailList: splitList } });\n        this.handleCancelAddManager();\n    }\n    //currying for adding emails\n    handleChange = event => {\n        this.setState({\n            ...this.state,\n            emailList: event.target.value,\n        });\n    }\n    //pagination\n    handleChangeRowsPerPage = event => {\n        this.setState({\n            ...this.state,\n            rowsPerPage: event.target.value\n        });\n    };\n    //pagination\n    handleChangePage = (event, page) => {\n        this.setState({\n            ...this.state,\n            page,\n        });\n    };\n\n    addManagerData = () => {\n        this.setState({ emailList: \"ridleydan31@gmail.com\" });\n    }\n\n    render() {\n        const { rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, this.props.reduxState.adminMainReducer.length - page * rowsPerPage);\n        const { classes } = this.props;\n        return (\n            <div className={classes.margin}>\n                <h1>Welcome, {this.props.reduxState.user.email}!</h1>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <CustomTableCell>Organization Name</CustomTableCell>\n                                <CustomTableCell>Survey Results Page</CustomTableCell>\n                                <CustomTableCell>Update Information</CustomTableCell>\n                                <CustomTableCell>Cycle Status</CustomTableCell>\n                                <CustomTableCell>Add Manager</CustomTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {/*this for each loop will map through available organizations in the database and display them \n                            on the DOM in a table*/}\n                            {this.props.reduxState.adminMainReducer.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map(organization => (\n                                    <TableRow key={organization.id} organization={organization}>\n                                        <CustomTableCell>{organization.name}</CustomTableCell>\n                                        <CustomTableCell>\n                                            <Button\n                                                classes={{\n                                                    root: classes.buttons,\n                                                    label: classes.label,\n                                                }}\n                                                variant=\"contained\"\n                                                onClick={() => this.handleViewOrgClick(organization.id)}>\n                                                View\n                                            </Button>\n                                        </CustomTableCell>\n                                        <CustomTableCell>\n                                            <Button\n                                                classes={{\n                                                    root: classes.buttons,\n                                                    label: classes.label,\n                                                }}\n                                                variant=\"contained\"\n                                                onClick={this.handleEditOrgClick(organization)}>\n                                                Edit\n                                            </Button>\n                                        </CustomTableCell>\n                                        {/* Ternary Function to render button or text */}\n                                        <CustomTableCell>\n                                            {\n                                                organization.collecting_data ?\n                                                    <Button\n                                                        classes={{\n                                                            root: classes.deactivate,\n                                                        }}\n                                                        variant=\"contained\"\n                                                        onClick={() => this.handleDeactivateClick(organization.id)}>\n                                                        Deactivate\n                                                    </Button> :\n                                                    <p>Deactivated</p>\n                                            }\n                                        </CustomTableCell>\n                                        {/* Ternary Function to disable   */}\n                                        <CustomTableCell>\n                                            <Button\n                                                classes={{\n                                                    root: classes.buttons,\n                                                    label: classes.label,\n                                                }}\n                                                variant=\"contained\"\n                                                onClick={this.handleAddManagers(organization.id)}\n                                                disabled={!organization.collecting_data}\n                                            >\n                                                Send Invite\n                                    </Button>\n                                        </CustomTableCell>\n                                    </TableRow>\n\n                                ))}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                    <CustomTableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <TablePagination\n                    rowsPerPageOptions={[6, 12, 24]}\n                    component=\"div\"\n                    count={this.props.reduxState.adminMainReducer.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n                <Button color=\"primary\" onClick={this.handleAddNewOrganizationClick}\n                    classes={{\n                        root: classes.buttons,\n                        label: classes.label,\n                    }}>Add New Organization</Button>\n\n                {/* Dialog box for editing organization */}\n                <Dialog open={this.state.editDialog}>\n                    <DialogTitle>Edit Organization</DialogTitle>\n                    <DialogContent>\n\n                        <TextField\n                            id=\"orgName\"\n                            label=\"Name\"\n                            className={classes.textField}\n                            value={this.state.orgName}\n                            onChange={this.handleChangeOrgName}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                    </DialogContent>\n                    <br />\n                    <Button color=\"primary\" onClick={this.handleUpdateOrgClick}>Update</Button>\n                    <Button color=\"secondary\" onClick={this.handleEditCancelClick}>Cancel</Button>\n                </Dialog>\n\n                {/* Dialog box for deactivating */}\n                <Dialog open={this.state.deactivateDialog}>\n                    <DialogTitle>Are you sure you want to deactivate this company?</DialogTitle>\n                    <Button color=\"primary\" onClick={() => this.handleDeactivateConfirm(this.state.org_id)}>Yes</Button>\n                    <Button color=\"secondary\" onClick={this.handleCancelDeactivate}>No</Button>\n                </Dialog>\n\n                {/* Dialog box for inviting managers */}\n                <Dialog open={this.state.addManager}>\n                    <DialogTitle onClick={this.addManagerData}>Add Managers</DialogTitle>\n                    <DialogContent>\n                        <Typography>1 email per line</Typography>\n                        {/* Large Input Box */}\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"No Commas\"\n                            multiline\n                            rows=\"4\"\n                            placeholder='Email Addresses'\n                            className={classes.textField}\n                            value={this.state.emailList}\n                            onChange={this.handleChange}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color=\"primary\" onClick={this.sendInvitationEmails}>Send Invitations</Button>\n                        <Button color=\"secondary\" onClick={this.handleCancelAddManager}>Cancel</Button>\n                    </DialogActions>\n                </Dialog>\n            </div >\n        );\n    }\n}\n\nAdminMain.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nconst adminMainRouter = withRouter(AdminMain);\n\nconst adminMainRouterStyles = connect(mapStateToProps)(adminMainRouter);\n\nexport default withStyles(styles)(adminMainRouterStyles);\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n/*----Material UI----*/\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n/*----Material UI----*/\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n        minHeight: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 'flex',\n    },\n    margin:  {\n        margin: 10\n    }\n});\n\nclass NewOrgForm extends Component {\n    state = {\n        newOrganization: {\n            name: '',\n        }\n    };//this is the local state for creating new organizations\n\n    handleChangeFor = propertyName => event => {\n        this.setState({\n            newOrganization: {\n                ...this.state.newOrganization,\n                [propertyName]: event.target.value\n            }\n        });\n    };//currying function that can handle many inputs--currently only handling newOrganization.name\n\n    handleOrgSubmit = (event) => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_NEW_ORGANIZATION', payload: this.state.newOrganization }) //upon submit, action sends info to newOrgSaga\n        this.setState({\n            ...this.state.newOrganization,\n            newOrganization: {\n                name: '',\n            }\n        });//spread operator holds former state, setState alters state to make a new organization\n        this.props.dispatch({ type: 'ADD_NEW_ORGANIZATION_SNACKBAR' })//this will dispatch an action type which triggers a SnackBar alert\n    };//end handleOrgSubmit\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.margin}>\n                <h1>Add a New Organization</h1>\n                <form className=\"form\">\n                    <FormControl className={classes.container} noValidate autoComplete=\"off\">\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"New Organization\"\n                            className={classes.textField}\n                            value={this.state.newOrganization.name}\n                            onChange={this.handleChangeFor('name')}\n                            margin=\"normal\"\n                        />\n                        <Button onClick={this.handleOrgSubmit} type=\"submit\" value='Submit' color=\"primary\">Submit</Button>\n                    </FormControl>\n                </form>\n            </div >\n        );\n    }\n}\n\nNewOrgForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nconst newOrgFormStyles = withStyles(styles)(NewOrgForm)\n\nexport default connect(mapStateToProps)(newOrgFormStyles);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n//this component handles SnackBar alerts for various actions on the site\n//they are primarily for visual confirmation that an action (submit, login, deactivate, etc.)\n//was successful\nclass AlertSnackBar extends React.Component {\n\n    handleClose = () => {\n        this.props.dispatch({ type: 'CLOSE_SNACKBAR' });\n    };\n\n    render() {\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                    open={this.props.messagesReducer.addNewOrganizationSnackBar}\n                    autoHideDuration={3000}\n                    onClose={this.handleClose}\n                    message={\"Added Organization\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.props.messagesReducer.surveyCompletedSnackBar}\n                    autoHideDuration={3000}\n                    onClose={this.handleClose}\n                    message={\"Excellent! This week's survey is complete.\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.props.messagesReducer.confirmDeactivateSnackBar}\n                    autoHideDuration={3000}\n                    onClose={this.handleClose}\n                    message={\"This Organization Has Been Deactivated\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.props.messagesReducer.registrationCompletedSnackBar}\n                    autoHideDuration={3000}\n                    onClose={this.handleClose}\n                    message={\"Great job, your Plyable registration is complete!\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.props.messagesReducer.emailSuccess}\n                    autoHideDuration={3000}\n                    onClose={this.handleClose}\n                    message={\"Invites Sent\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.props.messagesReducer.loginMistype}\n                    autoHideDuration={2000}\n                    onClose={this.handleClose}\n                    message={\"Your Email and Password didn't match\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.props.messagesReducer.loginError}\n                    autoHideDuration={2000}\n                    onClose={this.handleClose}\n                    message={\"Something went wrong. Check your internet connection.\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.props.messagesReducer.loginInputError}\n                    autoHideDuration={2000}\n                    onClose={this.handleClose}\n                    message={\"Please enter your email and password\"}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                />\n            </div>\n        );\n    }\n}\nconst mapStateToProps = ({ messagesReducer }) => ({ messagesReducer });\n\nexport default connect(mapStateToProps)(AlertSnackBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog } from '@material-ui/core';\n\n//keeps user form spam-clicking \"send\"\n\nconst SendingEmails = props => {\n    return (\n        <div>\n            <Dialog open={props.messagesReducer.sendingEmail}>\n                <div className=\"generalDialog\">\n                    <h3>Sending Invites</h3>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ messagesReducer }) => ({ messagesReducer });\n\nexport default connect(mapStateToProps)(SendingEmails);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Button, withStyles } from '@material-ui/core';\n\n//this component will handle errors in sending emails in Nodemailer\n\nconst styles = () => ({\n    buttons: {\n        background: 'linear-gradient(45deg, #86008b 40%, #aaa 90%)',\n        borderRadius: 5,\n        border: 0,\n        color: 'white',\n        height: 24,\n        padding: '0 10px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 185, .3)',\n    },\n})\n\nconst EmailError = props => {\n    const { classes } = props;\n    return (\n        <div>\n            <Dialog open={props.messagesReducer.emailError}>\n                <div className=\"generalDialog\">\n                    <h3>Error sending emails</h3>\n                    <p>There was an error sending invites.</p>\n                    <Button\n                        classes={{\n                            root: classes.buttons,\n                        }}\n                        onClick={() => {\n                            props.dispatch({ type: 'CONFIRM_EMAIL_ERROR' });\n                        }}>Okay</Button>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ messagesReducer }) => ({ messagesReducer });\n\nexport default connect(mapStateToProps)(withStyles(styles)(EmailError));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Button, withStyles } from '@material-ui/core';\n\n//handles redundent users/emails and keeps them from being added\n\nconst styles = () => ({\n    buttons: {\n        background: 'linear-gradient(45deg, #86008b 40%, #aaa 90%)',\n        borderRadius: 5,\n        border: 0,\n        color: 'white',\n        height: 24,\n        padding: '0 10px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 185, .3)',\n    },\n})\n\nconst RedundantEmail = props => {\n    const { classes } = props;\n    return (\n        <div>\n            <Dialog open={props.messagesReducer.emailRedundant}>\n                <div className=\"generalDialog\">\n                    <h3>User Already Exists</h3>\n                    <p>One or more of the emails sent already exist in our database.</p>\n                    <Button\n                        classes={{\n                            root: classes.buttons,\n                        }}\n                        onClick={() => {\n                            props.dispatch({ type: 'CONFIRM_EMAIL_ERROR' });\n                        }}>Okay</Button>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ messagesReducer }) => ({ messagesReducer });\n\nexport default connect(mapStateToProps)(withStyles(styles)(RedundantEmail));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Button, withStyles } from '@material-ui/core';\n\nconst styles = () => ({\n    buttons: {\n        background: 'linear-gradient(45deg, #86008b 40%, #aaa 90%)',\n        borderRadius: 5,\n        border: 0,\n        color: 'white',\n        height: 24,\n        padding: '0 10px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 185, .3)',\n    },\n})\n\nconst EmailError = props => {\n    const { classes } = props;\n    return (\n        <div>\n            <Dialog open={props.messagesReducer.registerError}>\n                <div className=\"generalDialog\">\n                    <h3>Unauthorized User</h3>\n                    <p>Please check this email is right.</p>\n                    <Button\n                        classes={{\n                            root: classes.buttons,\n                        }}\n                        onClick={() => {\n                            props.dispatch({ type: 'CONFIRM_REGISTER_ERROR' });\n                        }}>Okay</Button>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ messagesReducer }) => ({ messagesReducer });\n\nexport default connect(mapStateToProps)(withStyles(styles)(EmailError));\n","import React from 'react';\nimport AlertSnackBar from './AlertSnackBar';\nimport SendingEmails from './SendingEmails';\nimport EmailError from './EmailError';\nimport RedundantEmail from './RedundantEmail';\nimport RegisterError from './RegisterError';\nimport './messages.css';\n\n//sort of like an index.js, all the dialogues are put here, and opened when needed\n//their primary purpose is to prevent the user from mucking around when important\n//things are happening, like the transfering of files.\n//they are opened and closed wherever they are needed, such as in a saga, or button click\nconst AllMessages = () => {\n    return (\n        <div>\n            <AlertSnackBar />\n            <SendingEmails />\n            <EmailError />\n            <RedundantEmail />\n            <RegisterError />\n        </div>\n    );\n}\n\nexport default AllMessages;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport AddEmployees from '../Manager/AddEmployees';\nimport AdminOrgMain from '../AdminOrgMain/AdminOrgMain';\nimport Survey from '../Survey/Survey';\nimport UserMain from '../UserMain/UserMain';\nimport Registration from '../Registration/Registration';\nimport './App.css';\nimport AdminMain from '../AdminMain/AdminMain';\nimport NewOrgForm from '../AdminMain/NewOrgForm';\nimport CompletedFeedback from '../CompletedFeedback/CompletedFeedback';\nimport Messages from '../Messages/AllMessages';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport teal from '@material-ui/core/colors/teal';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: indigo,\n    secondary: teal,\n    errors: red,\n  }\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <Nav />\n            <Switch>\n              {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n              <Redirect exact from=\"/\" to=\"/main\" />\n              <Route\n                exact\n                path=\"/register\"\n                component={Registration}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/addemployees\"\n                component={AddEmployees}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/survey\"\n                component={Survey}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/main\"\n                component={UserMain}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/adminmain\"\n                component={AdminMain}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/adminmain/organization/:id\"\n                component={AdminOrgMain}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/adminmain/createneworganization\"\n                component={NewOrgForm}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/viewparticipation\"\n                render={() => <CompletedFeedback useOrgId={true} />}\n              />\n              {/* If none of the other routes matched, we will show a 404. */}\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n            <Messages />\n            <Footer />\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './redux/reducers';\nimport rootSaga from './redux/sagas';\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}